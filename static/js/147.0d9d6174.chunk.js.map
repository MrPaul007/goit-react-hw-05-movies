{"version":3,"file":"static/js/147.0d9d6174.chunk.js","mappings":"sQACA,EAAmC,oC,SC0DnC,EArDiB,WACb,OAA0BA,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KAMQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,2FACdJ,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdR,SAAS,OAHC,mBAOSS,EAAAA,EAAAA,IAAQL,GAPjB,OAOJM,EAPI,OAQVP,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdR,SAAS,EACTD,MAAOW,OAXD,gDAcVP,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdR,SAAS,EACTC,MAAK,UAjBC,yDAAH,qDAsBfM,MACD,CAACH,IAEJ,IAEMO,EAFYT,EAAVH,MAEea,KAAI,YAA2C,IAAxCR,EAAuC,EAAvCA,GAAIS,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAC5CC,EAAQ,kCAAoCH,EAClD,OAAQ,gBAAaI,UAAWC,EAAxB,WACJ,gBAAKC,IAAKH,EAAOI,IAAKN,KACtB,4BACI,uBAAIA,KACJ,uCAAeC,UAJNX,MASrB,OAAQ,wBACHO,M,iMCrDHU,EAAU,mCAEVC,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAS,kCAGAC,EAAS,mCAAG,sGACeH,EAASI,IAAI,qBAAsB,CACnEC,OAAO,CACHC,QAASP,KAHI,uBACLQ,EADK,EACbnB,KAAQmB,QADK,kBAMdA,GANc,2CAAH,qDASTC,EAAY,mCAAG,WAAOC,GAAP,yFACDT,EAASI,IAAI,eAAgB,CAChDC,OAAO,CACHI,MAAAA,EACAH,QAASP,KAJO,uBAChBX,EADgB,EAChBA,KADgB,kBAOjBA,GAPiB,2CAAH,sDAUZsB,EAAY,mCAAG,WAAO5B,GAAP,yFACDkB,EAASI,IAAT,gBAAsBtB,GAAM,CAC/CuB,OAAO,CACHvB,GAAAA,EACAwB,QAASP,KAJO,uBAChBX,EADgB,EAChBA,KADgB,kBAOjBA,GAPiB,2CAAH,sDAUZD,EAAO,mCAAG,WAAOL,GAAP,yFACckB,EAASI,IAAT,gBAAsBtB,EAAtB,YAAoC,CACjEuB,OAAO,CACHC,QAASP,KAHE,uBACHY,EADG,EACXvB,KAAQuB,KADG,kBAMZA,GANY,2CAAH,sDASPC,EAAU,mCAAG,WAAO9B,GAAP,yFACCkB,EAASI,IAAT,gBAAsBtB,EAAtB,YAAoC,CACvDuB,OAAO,CACHC,QAASP,KAHK,uBACdX,EADc,EACdA,KADc,kBAMfA,GANe,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/pages/CastPage/cast-page.module.css?5ad3","pages/CastPage/CastPage.jsx","shared/api/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorDescription\":\"cast-page_actorDescription__YXnPz\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getCast } from \"../../shared/api/movies\";\nimport styles from \"./cast-page.module.css\";\n\nconst CastPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchCast = async () => {\n            setState(prevState => ({\n                ...prevState,\n                loading: true,\n            }));\n\n            try {\n                const data = await getCast(id);\n                setState(prevState => ({\n                    ...prevState,\n                    loading: false,\n                    items: data\n                }))\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: false,\n                    error,\n                }))\n            }\n        };\n\n        fetchCast()\n    }, [id])\n\n    const { items } = state;\n\n    const elements = items.map(({ id, profile_path, name, character }) =>{\n        const image = 'https://image.tmdb.org/t/p/w200' + profile_path;\n        return (<li key={id} className={styles.actorDescription}>\n            <img src={image} alt={name} />\n            <div>\n                <p>{name}</p>\n                <p>Character: {character}</p>\n            </div>\n        </li>)\n    })\n\n    return (<ul>\n        {elements}\n    </ul>)\n}\n\nexport default CastPage;","import axios from \"axios\";\n\nconst API_KEY = \"dd208677c341fec119543dd378b0d37a\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n});\n\nexport const getMovies = async () => {\n    const { data: { results } } = await instance.get(\"trending/movie/day\", {\n        params:{\n            api_key: API_KEY,\n        }\n    });\n    return results;\n};\n\nexport const searchMovies = async (query) => {\n    const { data } = await instance.get(\"search/movie\", {\n        params:{\n            query,\n            api_key: API_KEY,\n        }\n    });\n    return data;\n};\n\nexport const getMovieById = async (id) => {\n    const { data } = await instance.get(`movie/${id}`, {\n        params:{\n            id,\n            api_key: API_KEY,\n        }\n    });\n    return data;\n};\n\nexport const getCast = async (id) => {\n    const { data: { cast } } = await instance.get(`movie/${id}/credits`, {\n        params:{\n            api_key: API_KEY,\n        }\n    });\n    return cast;\n};\n\nexport const getReviews = async (id) => {\n    const { data } = await instance.get(`movie/${id}/reviews`, {\n        params:{\n            api_key: API_KEY,\n        }\n    });\n    return data;\n};"],"names":["useState","items","loading","error","state","setState","id","useParams","useEffect","fetchCast","prevState","getCast","data","elements","map","profile_path","name","character","image","className","styles","src","alt","API_KEY","instance","axios","baseURL","getMovies","get","params","api_key","results","searchMovies","query","getMovieById","cast","getReviews"],"sourceRoot":""}